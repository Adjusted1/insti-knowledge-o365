@page "/fetchdata"

@using blazor_base
@inject O365Data O365txt

<h1>O:365 C:luster P:harm</h1>

<p>This WebApp consumes O365 email data and tries to organize it better than you can :p</p>

@if(!submissionSuccess)
{
    <p>Enter C:reds</p>
}
else
{
    <table class="table">
        <thead>
                <tr>
                    <th>Subject</th>
                    <th>Body</th>
                    <th>Centroid</th>
                </tr>
        </thead>
        <tbody>
            @foreach (string s in o365Data.Subject)
            {
                <tr>
                    <td>@s</td>
                    @*<td>@o365Data.Body</td>
                    <td>@o365Data.Centroid</td>*@
                </tr>
            }
            </tbody>
    </table>
}

<EditForm Model="@O365txt" OnValidSubmit="SendCredsGetData">
    <DataAnnotationsValidator />
    <ValidationSummary />
    e:mail
    <InputText id="Username" @bind-Value="o365Data.Username"></InputText>
    p:assword
    <InputText id="Password" @bind-Value="o365Data.Password" type="password"></InputText>

    <button @ref=buttonSend id="submitter" type="submit">G:et S:ome D:ata </button>
</EditForm>


@code {

    private O365Data o365Data = null;

    protected override async Task OnInitializedAsync()
    {
        // spinner test
        // failed System.Threading.Thread.Sleep(5000);
        // it gets here and outputs to debug OK
        System.Diagnostics.Debug.WriteLine("async service broker invoked from client action");
        o365Data = new O365Data();
    }


    private ElementReference buttonSend;
    private bool submissionSuccess = false;

    public void SendCredsGetData()
    {
        o365Data.GetData();
        if(o365Data != null) { submissionSuccess = true; }
    }
}


