@page "/fetchdata"

@using blazor_base
@using BlazorPro.Spinkit

@inject O365Data O365txt

<h1>O:365 C:luster P:harm</h1>

<p>This WebApp consumes O365 email and Clusters the content into unlabeled groups</p>


@if (o365Data.Clustering == true)
{
    <br />
    <p>working...</p>
    <Fold />
    <br />
}

else
{

    <table class="table">
        <thead>
            <tr>
                <th>Logged in? @o365Data.LoggedIn.ToString()</th>
                <th>Number of Clusters @o365Data.kStr.ToString() </th>
                <th>Clustered? @o365Data.Clustering.ToString()</th>
            </tr>
        </thead>
        <tbody>

            @*<tr>
                    <td> k =  @o365Data.kStr</td>
                </tr>*@

        </tbody>
    </table>
}



<EditForm Model="@O365txt" OnValidSubmit="(async () => await SendCredsGetData())">
    <DataAnnotationsValidator />
    <ValidationSummary />
    e:mail
    <InputText id="Username" @bind-Value="o365Data.Username"></InputText>
    p:assword
    <InputText id="Password" @bind-Value="o365Data.Password" type="password"></InputText>
    N:umber of Clusters
    <InputText id="kStr" @bind-Value="o365Data.kStr">2</InputText>
    N:umber of Msgs to Cluster
    <InputText id="documents" @bind-Value="o365Data.documents">2</InputText>

    <button @ref=buttonSend id="submitter" type="submit">Organize / Cluster my Email</button>
</EditForm>

@code {

    private O365Data o365Data = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (o365Data == null)
        {
            o365Data = new O365Data();
        }
        Clustering = o365Data.Clustering;

    }

    private ElementReference buttonSend;
    private ElementReference buttonCluster;
    private bool Clustering = false;

    public async Task SendCredsGetData()
    {
        await Task.Run(() => o365Data.GetData());
        //StateHasChanged();
        //if (o365Data.LoggedIn)
        //{
        //    Clustering = true;
        //}
        //if (o365Data.ClusterSuccess)
        //{
        //    Clustering = false;
        //}
    }

}


