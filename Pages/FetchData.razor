@page "/fetchdata"

@using blazor_base
@using Faso.Blazor.SpinKit
@inject O365Data O365txt

<h1>O:365 C:luster P:harm</h1>

<p>This WebApp consumes O365 email and Clusters the content into unlabeled groups</p>


@if ((o365Data.LoggedIn) && (o365Data.ClusterSuccess == false))
{
    <p>Classifying... </p>
    <SpinKitCubeGrid />
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Logged in? @o365Data.LoggedIn.ToString()</th>
                <th>Clustered? @o365Data.ClusterSuccess.ToString()</th>
                @*<th>Subject</th>*@
                @*<th>Body</th>*@
                @*<th>Centroid 0:</th>
        <th>Centroid 1: @o365Data.Centroids.Count</th>*@
            </tr>
        </thead>
        <tbody>

            <tr>
                <td> k =  @o365Data.kStr</td>

                @*@<td>@o365Data.Subject[0]</td>*@
                @*<td>@o365Data.Body[0]</td>*@
                <td>@*@o365Data.Centroid[0]*@</td>
                @*foreach (var s in o365Data.Subject)
                    {
                        <td>@s</td>
                    }*@
                @*foreach (var st in o365Data.Body)
                    {
                        <td>@st</td>
                    }*@
                @*foreach (var str in o365Data.Centroid)
                    {
                        <td>@str</td>
                    }*@
            </tr>

        </tbody>
    </table>
}



<EditForm Model="@O365txt" OnValidSubmit="(async () => await SendCredsGetData())">
    <DataAnnotationsValidator />
    <ValidationSummary />
    e:mail
    <InputText id="Username" @bind-Value="o365Data.Username"></InputText>
    p:assword
    <InputText id="Password" @bind-Value="o365Data.Password" type="password"></InputText>
    N:umber of Clusters
    <InputText id="kStr" @bind-Value="o365Data.kStr">2</InputText>
    N:umber of Msgs to Cluster
    <InputText id="documents" @bind-Value="o365Data.documents">2</InputText>

    <button @ref=buttonSend id="submitter" type="submit">Organize / Cluster my Email</button>
</EditForm>

@*<EditForm Model="@O365txt" OnValidSubmit="(async () => await ClusterTheData())">
        <button @ref=buttonCluster id="submitter" type="submit">C:::luster</button>
    </EditForm>*@

@code {

    private O365Data o365Data = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (o365Data == null)
        {
            o365Data = new O365Data();
        }

        //if (o365Data.LoggedIn)
        //{
        //    isLoggingIn = false;
        //}
        //if (o365Data.IsReadyToML)
        //{
        //    submissionSuccess = true;
        //}
        //if (o365Data.ClusterSuccess)
        //{
        //    clusterSuccess = true;
        //}
    }

    private ElementReference buttonSend;
    private ElementReference buttonCluster;

    //private bool submissionSuccess = false;
    //private bool clusterSuccess = false;
    //private bool isLoggingIn = false;

    public async Task SendCredsGetData()
    {
        await Task.Run(() => o365Data.GetData());
        //if (o365Data.LoggedIn)
        //{
        //    isLoggingIn = false;
        //    submissionSuccess = true;
        //}
    }

    //public async Task ClusterTheData() { }
}


